---
defaults:
  timeouts:
    pipeline: 1h
    tasks: 30m
    finally: 10m
  metadata:
    namespace: tekton
    labels:
      ec.ai/environment: src
      ec.ai/team: platform
      ec.ai/component_group: tekton
      ec.ai/component: tekton-pipelines
      ec.ai/sub_component: pipelinerun
      ec.ai/technical_owner: rluckie
      ec.ai/contract: ec
      ec.ai/managed_by: gitops
      ec.ai/data_classification: internal
    annotations:
      github.tekton.dev/owner: body.repository.owner.login
      github.tekton.dev/repo: body.repository.name
      github.tekton.dev/log-server: https://tekton-log.src.ec.ai/logs
      github.tekton.dev/ref: >-
        "pull_request" in body
          ? body.pull_request.head.sha
          : body.head_commit.id
      github.tekton.dev/url: >-
        https://tekton.src.ec.ai/#/namespaces/{{ .Namespace }}/pipelineruns/{{ index .Labels "tekton.dev/pipelineRun" }}?pipelineTask={{ index .Labels "tekton.dev/pipelineTask" }}
      github.tekton.dev/name: >-
        {{ with index .Annotations "tekton.ec.ai/memberOf" }}{{.}} / {{ end }}{{ with index .Annotations "tekton.dev/displayName" }}{{.}}{{ else }}{{ index .Labels "tekton.dev/pipeline" }}{{ end }} / {{ index .Labels "tekton.dev/pipelineTask" }}
  params:
    - name: clone-url
      value: body.repository.clone_url
    - name: clone-ref
      value: >-
        "pull_request" in body
          ? body.pull_request.head.sha
          : body.head_commit.id
    - name: repo-name
      value: body.repository.name
    - name: repo-owner-name
      value: body.repository.owner.login
    - name: whitesource-api-key
      value: >-
        "pull_request" in body
          ? string("apiKeyDev")
          : string("apiKey")
    - name: whitesource-project-version
      value: >-
        "pull_request" in body
          ? string(body.pull_request.head.sha).truncate(7)
          : string(body.head_commit.id).truncate(7)
  workspaces:
    - name: source
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 25Gi
          storageClassName: premium-rwo
    # - name: cache
    #   persistentVolumeClaim:
    #     claimName: local-ssd-0
    - name: cache
      persistentVolumeClaim:
        claimName: tekton-filestore
  podTemplate:
    tolerations:
      - effect: NoSchedule
        key: tekton-pipelines
        operator: Equal
        value: "true"
    nodeSelector:
      cloud.google.com/gke-nodepool: tekton-pipelines
triggers:
  - name: pr
    filter: >-
      "action" in body &&  body.action in ["opened", "synchronize", "reopened"]
    pipelines: []
    defaults:
      params:
        - name: sonar-opts
          value:
            - string("-Dsonar.pullrequest.key=") + string(body.pull_request.number)
            - string("-Dsonar.pullrequest.branch=") + string(body.pull_request.head.ref)
            - string("-Dsonar.pullrequest.base=") + string(body.pull_request.base.ref)
  - name: main
    filter: >-
      "ref" in body && body.ref == "refs/heads/main"
    pipelines: []
    defaults:
      params:
        - name: sonar-opts
          value:
            - -Dsonar.branch.name=main
